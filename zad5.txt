 LJMP START
 ORG 100H
START:
 CALL LCD_CLR
 CALL WAIT_KEY
 
 MOV R1, A
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 CALL WRITE_HEX
 
 MOV A, #','
 CALL WRITE_DATA
 
 CALL WAIT_KEY
 MOV R2, A
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 CALL WRITE_HEX
 
 MOV A, R1
 MOV B, R2
 MUL AB
 MOV R5, A
 CALL LCD_CLR

 
DDD: 
 CLR C
 MOV A, R1
 SUBB A, R2
 
 JC ZMIANA 
 LJMP DALEJ
 
ZMIANA:
 CLR C
 MOV A, R2
 SUBB A, R1
 MOV R2, A
 SJMP POR

DALEJ: 
 CLR C
 MOV A, R1
 SUBB A, R2
 MOV R1, A
 
POR:
 MOV A, R1
 MOV B, R2
 CJNE A, B, DDD
 SJMP KONIEC

KONIEC:

 MOV A, R1
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 CALL WRITE_HEX
 
 MOV A, #','
 CALL WRITE_DATA
 
 MOV A, R5
 MOV B, R1
 DIV AB
 
 MOV B, #100
 DIV AB
 MOV R7, B
 CALL WRITE_HEX
 
 MOV A, R7
 MOV B, #10
 DIV AB
 SWAP A
 ADD A, B
 CALL WRITE_HEX
 
 LJMP $
 NOP
 